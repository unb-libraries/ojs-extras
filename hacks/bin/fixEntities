#!/usr/bin/perl -w

use strict;
use HTML::Entities qw(:DEFAULT encode_entities_numeric);;

####### begin define subroutine prototypes #####

sub usage();
sub cantWriteOutput();
sub replace($);

####### end define subroutine protypes #########

# call our usage script if no file passed in on command line
usage() unless defined($ARGV[0]);

my $file = $ARGV[0];

if (-e $file && -r $file) {

    local $/ = undef;
    my ($f_handle);
    open $f_handle, "<", $file;   
    my $contents = <$f_handle>; 
    close $f_handle;

    $contents =~ s/\\222/'/g;
    $contents =~ s/\\223/"/g;
    $contents =~ s/\\224/"/g;

    $contents = encode_entities_numeric($contents);
    # fix the tags that got converted in the process
    $contents =~ s{&#x3C;}{<}sg;            
    $contents =~ s{&#x3E;}{>}sg;
    $contents =~ s{&#x22;}{"}sg;
    $contents =~ s{&#x26;}{&}sg;

    open my $output, ">$file" or cantWriteOutput();
    print $output $contents;
    close $output;

} else {
    print "$file either doesn't exist, or is not readable.  Try again? \n";
}


######### BEGIN subroutine section ################

sub replace($) {

    my $string = shift;
    return ">" . encode_entities_numeric($string) . "<";
}

sub usage() {

    print <<END;

Usage: fixEntities YourFile.html

END
    exit();
}

sub cantWriteOutput() {

    print <<END;

fixEntities wasn't able to create the output HTML file, because it can't write to the output directory. Permission problems?

END
    exit();
}
